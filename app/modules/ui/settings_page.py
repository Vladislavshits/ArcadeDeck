import os
import json
import logging
from pathlib import Path

from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QFrame, QScrollArea,
    QLabel, QStackedWidget, QSizePolicy
)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QFont, QPixmap

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫
from app.modules.settings_plugins.about_settings import AboutPage
from modules.settings_plugins.general_settings import GeneralSettingsPage
from modules.settings_plugins.appearance_settings import AppearanceSettingsPage
from modules.settings_plugins.dev_settings import DevSettingsPage

logger = logging.getLogger('ArcadeDeck.SettingsPage')

class SettingsTile(QFrame):
    """–ü–ª–∏—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
    activated = pyqtSignal()
    focused = pyqtSignal()

    def __init__(self, name, icon_path="", action=None):
        super().__init__()
        self.name = name
        self.icon_path = icon_path
        self.action = action
        self.setObjectName("SettingsTile")
        self._focused = False

        # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        self.setMinimumSize(200, 112)
        self.setMaximumSize(300, 150)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Å—Ç–∏–ª–µ–π
        self.setFocusPolicy(Qt.FocusPolicy.StrongFocus)
        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)

        logger.debug(f"üîÑ –°–æ–∑–¥–∞–Ω–∞ –ø–ª–∏—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {name}")
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(8, 8, 8, 8)
        layout.setSpacing(6)
        layout.setAlignment(Qt.AlignmentFlag.AlignCenter)

        # –ò–∫–æ–Ω–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if self.icon_path and os.path.exists(self.icon_path):
            icon_label = QLabel()
            icon_pixmap = QPixmap(self.icon_path)
            icon_label.setPixmap(icon_pixmap.scaled(40, 40, Qt.AspectRatioMode.KeepAspectRatio))
            icon_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
            layout.addWidget(icon_label)

        # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
        name_label = QLabel(self.name)
        name_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        name_label.setFont(QFont("Arial", 11, QFont.Weight.Bold))
        name_label.setWordWrap(True)
        name_label.setMaximumHeight(40)
        layout.addWidget(name_label)

    def set_focused(self, focused):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ–∫—É—Å–∞"""
        self._focused = focused
        self.setProperty("focused", focused)
        self.style().unpolish(self)
        self.style().polish(self)
        self.update()

        if focused:
            self.focused.emit()

    def activate(self):
        """–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∏—Ç–∫–∏"""
        logger.debug(f"üéÆ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∏—Ç–∫–∏: {self.name}")
        if self.action:
            self.action()
        self.activated.emit()

    def mousePressEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –º—ã—à—å—é"""
        self.activate()

    def keyPressEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à"""
        if event.key() in (Qt.Key.Key_Return, Qt.Key.Key_Enter, Qt.Key.Key_Space):
            self.activate()
            event.accept()
        else:
            super().keyPressEvent(event)


class SettingsPage(QWidget):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –¥–ª—è –≥–µ–π–º–ø–∞–¥–∞"""
    tile_activated = pyqtSignal(int)
    focus_changed = pyqtSignal(int)

    def __init__(self, parent=None):
        super().__init__(parent)
        self.parent = parent
        self.tiles = []
        self.current_tile_index = 0
        self._settings_index = {}
        self.in_details_mode = False  # –†–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self._exit_dialog_open = False  # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞

        logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SettingsPage —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π")

        self.setObjectName("SettingsPage")
        self.setFocusPolicy(Qt.FocusPolicy.StrongFocus)

        self.setup_ui()
        self.create_settings_sections()
        logger.info(f"‚úÖ SettingsPage –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å {len(self.tiles)} –ø–ª–∏—Ç–∫–∞–º–∏")

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
        main_layout = QHBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(30)

        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–ª–∏—Ç–æ–∫
        left_widget = QWidget()
        left_widget.setObjectName("SettingsSidebar")
        left_widget.setMaximumWidth(350)
        left_widget.setMinimumWidth(250)
        left_layout = QVBoxLayout(left_widget)
        left_layout.setContentsMargins(0, 0, 0, 0)
        left_layout.setSpacing(15)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π–¥–±–∞—Ä–∞
        sidebar_title = QLabel("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        sidebar_title.setObjectName("SettingsTitle")
        sidebar_title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        sidebar_title.setFont(QFont("Arial", 20, QFont.Weight.Bold))
        left_layout.addWidget(sidebar_title)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–ª–∏—Ç–æ–∫
        self.tiles_container = QWidget()
        self.tiles_layout = QVBoxLayout(self.tiles_container)
        self.tiles_layout.setContentsMargins(5, 5, 5, 5)
        self.tiles_layout.setSpacing(10)
        self.tiles_layout.setAlignment(Qt.AlignmentFlag.AlignTop)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        self.scroll_area = QScrollArea()
        self.scroll_area.setObjectName("SettingsTilesScroll")
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setWidget(self.tiles_container)
        self.scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scroll_area.setFrameShape(QFrame.Shape.NoFrame)

        left_layout.addWidget(self.scroll_area)
        main_layout.addWidget(left_widget, 1)

        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –¥–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        right_widget = QWidget()
        right_widget.setObjectName("SettingsDetailsPanel")
        right_layout = QVBoxLayout(right_widget)
        right_layout.setContentsMargins(0, 0, 0, 0)
        right_layout.setSpacing(15)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.details_title = QLabel("–î–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.details_title.setObjectName("DetailsTitle")
        self.details_title.setFont(QFont("Arial", 18, QFont.Weight.Bold))
        self.details_title.setAlignment(Qt.AlignmentFlag.AlignLeft)
        right_layout.addWidget(self.details_title)

        # –°—Ç–µ–∫ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings_detail_stack = QStackedWidget()
        self.settings_detail_stack.setObjectName("SettingsDetails")
        right_layout.addWidget(self.settings_detail_stack, 1)

        main_layout.addWidget(right_widget, 3)

    def create_settings_sections(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        settings_items = [
            {"name": "–û–±—â–∏–µ", "icon": "", "page": GeneralSettingsPage},
            {"name": "–í–Ω–µ—à–Ω–∏–π –≤–∏–¥", "icon": "", "page": AppearanceSettingsPage},
            {"name": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç–ª–∞–¥–∫–∏", "icon": "", "page": DevSettingsPage},
            {"name": "–û ArcadeDeck", "icon": "", "page": AboutPage},
            {"name": "–í—ã—Ö–æ–¥", "icon": "", "page": None}
        ]

        logger.info(f"üìã –°–æ–∑–¥–∞–Ω–∏–µ {len(settings_items)} —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

        for idx, item in enumerate(settings_items):
            self.add_settings_section(idx, item)

        self.tiles_layout.addStretch(1)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—É—é –ø–ª–∏—Ç–∫—É
        if self.tiles:
            self.set_current_tile(0)

    def add_settings_section(self, index, item):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        name = item["name"]
        icon = item.get("icon", "")
        page_class = item.get("page")

        logger.debug(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ {index}: {name}")

        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–ª–∞—Å—Å)
        page = None
        if page_class:
            try:
                page = page_class(self.parent)
                page.setObjectName(f"SettingsPage_{name.replace(' ', '')}")
                self.settings_detail_stack.addWidget(page)
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã {name}: {e}")
                page = self.create_placeholder_page(name)
                self.settings_detail_stack.addWidget(page)
        else:
            # –î–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥" —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            page = self.create_placeholder_page(name)
            self.settings_detail_stack.addWidget(page)

        # –°–æ–∑–¥–∞–µ–º –ø–ª–∏—Ç–∫—É
        tile = SettingsTile(name, icon_path=icon)

        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥" –∏—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        if name == "–í—ã—Ö–æ–¥":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ù–ï –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª activated
            tile.action = self.handle_exit
        else:
            # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–ª–∏—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
            tile.action = lambda idx=index: self.on_tile_activated(idx)
            tile.activated.connect(lambda idx=index: self.on_tile_activated(idx))

        # –§–æ–∫—É—Å –≤—Å–µ–≥–¥–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º
        tile.focused.connect(lambda idx=index: self.on_tile_focused(idx))

        self.tiles.append(tile)
        self.tiles_layout.addWidget(tile)
        self._settings_index[name] = index

    def create_placeholder_page(self, name):
        """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –Ω–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤"""
        page = QWidget()
        layout = QVBoxLayout(page)
        label = QLabel(f"–†–∞–∑–¥–µ–ª '{name}' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        label.setFont(QFont("Arial", 14))
        layout.addWidget(label)
        return page

    def handle_exit(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –í—ã—Ö–æ–¥ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è"""
        if self._exit_dialog_open:
            logger.warning("üö´ –î–∏–∞–ª–æ–≥ –≤—ã—Ö–æ–¥–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤")
            return

        self._exit_dialog_open = True
        logger.info("üö™ –ó–∞–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

        if hasattr(self.parent, 'confirm_exit'):
            # –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
            self.parent.confirm_exit()

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        QTimer.singleShot(1000, lambda: setattr(self, '_exit_dialog_open', False))

    def on_tile_activated(self, index):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–ª–∏—Ç–∫–∏"""
        logger.info(f"üéÆ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∏—Ç–∫–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º {index}")

        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±—Ä–∞–Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥"
        # –¢–µ–ø–µ—Ä—å –∫–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥" –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ handle_exit()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.settings_detail_stack.setCurrentIndex(index)
        self.tile_activated.emit(index)

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.enter_details_mode()

    def on_tile_focused(self, index):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞ –ø–ª–∏—Ç–∫–µ"""
        self.current_tile_index = index
        self.focus_changed.emit(index)

    def enter_details_mode(self):
        """–í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        if not self.in_details_mode:
            self.in_details_mode = True
            logger.debug("üîç –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")

            # –°–Ω–∏–º–∞–µ–º —Ñ–æ–∫—É—Å —Å –ø–ª–∏—Ç–æ–∫
            for tile in self.tiles:
                tile.set_focused(False)

            # –§–æ–∫—É—Å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
            current_page = self.settings_detail_stack.currentWidget()
            if hasattr(current_page, 'focus_first_element'):
                current_page.focus_first_element()
            else:
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ–º –ø–µ—Ä–≤—ã–π —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
                self.focus_first_available_widget(current_page)

    def focus_first_available_widget(self, widget):
        """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏—â–µ—Ç –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–ª—è —Ñ–æ–∫—É—Å–∞ –≤–∏–¥–∂–µ—Ç"""
        if widget is None:
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–∏–¥–∂–µ—Ç
        if widget.focusPolicy() != Qt.FocusPolicy.NoFocus:
            widget.setFocus()
            return True

        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –≤–∏–¥–∂–µ—Ç—ã
        for child in widget.findChildren(QWidget):
            if child.focusPolicy() != Qt.FocusPolicy.NoFocus:
                child.setFocus()
                return True

        return False

    def exit_details_mode(self):
        """–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        if self.in_details_mode:
            self.in_details_mode = False
            logger.debug("üîô –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—É—â—É—é –ø–ª–∏—Ç–∫—É
            self.set_current_tile(self.current_tile_index)

    def navigate_up(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–≤–µ—Ä—Ö"""
        if self.in_details_mode:
            # –í —Ä–µ–∂–∏–º–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            current_page = self.settings_detail_stack.currentWidget()
            if hasattr(current_page, 'navigate_up'):
                handled = current_page.navigate_up()
                if handled:
                    return True

            # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞
            self.exit_details_mode()
            return True
        else:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ø–ª–∏—Ç–∫–∞–º –≤–≤–µ—Ä—Ö
            if self.tiles:
                new_index = (self.current_tile_index - 1) % len(self.tiles)
                self.set_current_tile(new_index)
                return True
        return False

    def navigate_down(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–Ω–∏–∑"""
        if self.in_details_mode:
            # –í —Ä–µ–∂–∏–º–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            current_page = self.settings_detail_stack.currentWidget()
            if hasattr(current_page, 'navigate_down'):
                handled = current_page.navigate_down()
                if handled:
                    return True

            # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞
            self.exit_details_mode()
            return True
        else:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ø–ª–∏—Ç–∫–∞–º –≤–Ω–∏–∑
            if self.tiles:
                new_index = (self.current_tile_index + 1) % len(self.tiles)
                self.set_current_tile(new_index)
                return True
        return False

    def navigate_right(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ø—Ä–∞–≤–æ - –≤—Ö–æ–¥ –≤ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        if not self.in_details_mode and self.current_tile_index != len(self.tiles) - 1:
            # –í—Ö–æ–¥ –≤ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥")
            self.enter_details_mode()
            return True
        return False

    def navigate_left(self):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ª–µ–≤–æ - –≤—ã—Ö–æ–¥ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        if self.in_details_mode:
            self.exit_details_mode()
            return True
        return False

    def activate_current(self):
        """–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞"""
        if self.in_details_mode:
            # –í —Ä–µ–∂–∏–º–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            current_page = self.settings_detail_stack.currentWidget()
            if hasattr(current_page, 'activate_current'):
                return current_page.activate_current()
            return False
        else:
            # –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π –ø–ª–∏—Ç–∫–∏
            if 0 <= self.current_tile_index < len(self.tiles):
                self.tiles[self.current_tile_index].activate()
                return True
        return False

    def set_current_tile(self, index):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é –ø–ª–∏—Ç–∫—É"""
        if 0 <= index < len(self.tiles):
            # –°–Ω–∏–º–∞–µ–º —Ñ–æ–∫—É—Å —Å–æ –≤—Å–µ—Ö –ø–ª–∏—Ç–æ–∫
            for tile in self.tiles:
                tile.set_focused(False)

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–ª–∏—Ç–∫—É
            self.tiles[index].set_focused(True)
            self.current_tile_index = index

            # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∏—Ç–∫–µ
            self.ensure_tile_visible(index)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –¥–µ—Ç–∞–ª–µ–π)
            if not self.in_details_mode and index != len(self.tiles) - 1:
                self.settings_detail_stack.setCurrentIndex(index)

            logger.debug(f"üéØ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è –ø–ª–∏—Ç–∫–∞: {index}")

    def ensure_tile_visible(self, index):
        """–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∏—Ç–∫–∏"""
        if 0 <= index < len(self.tiles):
            tile = self.tiles[index]
            # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∏—Ç–∫–µ
            self.scroll_area.ensureWidgetVisible(tile)

    def get_tiles(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–ª–∏—Ç–æ–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        return self.tiles

    def get_current_tile_index(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –ø–ª–∏—Ç–∫–∏"""
        return self.current_tile_index

    def showEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        logger.info("‚öôÔ∏è SettingsPage –ø–æ–∫–∞–∑–∞–Ω")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—É—â—É—é –ø–ª–∏—Ç–∫—É
        if self.tiles and not self.in_details_mode:
            self.set_current_tile(self.current_tile_index)
        super().showEvent(event)
