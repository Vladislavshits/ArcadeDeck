import os
import sys
import json
import logging
from pathlib import Path

from PyQt6.QtWidgets import QApplication

logger = logging.getLogger('–ú–æ–¥—É–ª—å –ø—É—Ç–µ–π')

APP_VERSION = "0.1.96-beta"
USER_HOME = os.path.expanduser("~")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏
if getattr(sys, 'frozen', False):
    # –î–ª—è —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (PyInstaller)
    BASE_DIR = os.path.dirname(sys.executable)
else:
    # –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# –ü—É—Ç–∏ –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –æ–∫—Ä—É–∂–µ–Ω–∏—é
VENV_PATH = os.path.join(BASE_DIR, "app", "venv")

# –ü—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–≥—Ä–∞–º–º—ã
STYLES_DIR = os.path.join(BASE_DIR, "app", "ui_assets")
THEME_FILE = os.path.join(STYLES_DIR, "theme.qs5")

# –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
CONFIG_DIR = os.path.join(BASE_DIR, "app", "config")
SETTINGS_FILE = os.path.join(CONFIG_DIR, "settings.ini")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ users –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
def get_users_path():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ users –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    try:
        from app.settings import app_settings
        app_settings._ensure_settings()
        return app_settings.get_users_path()
    except Exception as e:
        # Fallback –Ω–∞ –ø—É—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_path = os.path.join(BASE_DIR, "users")
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—É—Ç—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫, –∏—Å–ø–æ–ª—å–∑—É—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_path}")
        return default_path

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–¥–ø–∞–ø–∫–µ users
def get_users_subpath(subfolder):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ø–æ–¥–ø–∞–ø–∫–µ –≤–Ω—É—Ç—Ä–∏ users (games, saves, images –∏ —Ç.–¥.)"""
    users_path = get_users_path()
    return os.path.join(users_path, subfolder)

def update_launcher_scripts(old_users_path, new_users_path):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è users
    """
    try:
        logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞:")
        logger.info(f"   –°—Ç–∞—Ä—ã–π –ø—É—Ç—å: {old_users_path}")
        logger.info(f"   –ù–æ–≤—ã–π –ø—É—Ç—å: {new_users_path}")

        # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –ª–∞—É–Ω—á–µ—Ä–∞–º–∏ –≤ –ù–û–í–û–ú —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏
        new_launchers_dir = Path(new_users_path) / "launchers"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å–æ —Å–∫—Ä–∏–ø—Ç–∞–º–∏ –≤ –ù–û–í–û–ú –ø—É—Ç–∏
        if not new_launchers_dir.exists():
            logger.info(f"‚ÑπÔ∏è –ü–∞–ø–∫–∞ —Å–æ —Å–∫—Ä–∏–ø—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {new_launchers_dir}")
            return True

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–∑ –ù–û–í–û–ì–û —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è
        script_files = list(new_launchers_dir.glob("*.sh"))

        if not script_files:
            logger.info("‚ÑπÔ∏è –°–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return True

        updated_scripts = 0

        for script_file in script_files:
            try:
                # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä–∏–ø—Ç–∞
                with open(script_file, 'r', encoding='utf-8') as f:
                    content = f.read()

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                old_content = content

                # –ò—â–µ–º –í–°–ï –ø—É—Ç–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ "ArcadeDeck/users" –∏ –∑–∞–º–µ–Ω—è–µ–º –∏—Ö
                import re

                # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—É—Ç–µ–π ArcadeDeck/users
                pattern = r'/home/deck/[^/]+/ArcadeDeck/users'

                # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –ø—É—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π
                content = re.sub(pattern, new_users_path, content)

                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –∑–∞–º–µ–Ω—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—Ç–∞—Ä—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç pattern
                if old_users_path in content:
                    content = content.replace(old_users_path, new_users_path)

                # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
                if content != old_content:
                    # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª
                    with open(script_file, 'w', encoding='utf-8') as f:
                        f.write(content)

                    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
                    script_file.chmod(0o755)

                    updated_scripts += 1
                    logger.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç: {script_file.name}")

                    # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                    old_lines = old_content.split('\n')
                    new_lines = content.split('\n')

                    for i, (old_line, new_line) in enumerate(zip(old_lines, new_lines)):
                        if old_line != new_line:
                            logger.info(f"   –°—Ç—Ä–æ–∫–∞ {i+1}:")
                            logger.info(f"     –ë—ã–ª–æ: {old_line}")
                            logger.info(f"     –°—Ç–∞–ª–æ: {new_line}")
                else:
                    logger.info(f"‚ÑπÔ∏è –°–∫—Ä–∏–ø—Ç {script_file.name} –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")

            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ {script_file.name}: {e}")
                continue

        logger.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–≤: {updated_scripts}/{len(script_files)}")
        return True

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞: {e}")
        import traceback
        logger.error(f"üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
        return False

def update_installation_paths(old_users_path, new_users_path):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ installed_games.json –∏ —Å–∫—Ä–∏–ø—Ç–∞—Ö –∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è users
    """
    try:
        # –ò—â–µ–º installed_games.json –≤ –°–¢–ê–†–û–ú –ø—É—Ç–∏ (–≥–¥–µ –æ–Ω —Ä–µ–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è)
        old_installed_games_file = Path(old_users_path) / "installed_games.json"
        new_installed_games_file = Path(new_users_path) / "installed_games.json"

        logger.info(f"üîç –ü–æ–∏—Å–∫ installed_games.json:")
        logger.info(f"   –°—Ç–∞—Ä—ã–π –ø—É—Ç—å: {old_installed_games_file}")
        logger.info(f"   –ù–æ–≤—ã–π –ø—É—Ç—å: {new_installed_games_file}")

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—É—Ç—å (–≥–¥–µ —Ñ–∞–π–ª —Ä–µ–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è)
        installed_games_file = None
        if old_installed_games_file.exists():
            installed_games_file = old_installed_games_file
            logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω installed_games.json –≤ —Å—Ç–∞—Ä–æ–º –ø—É—Ç–∏")
        elif new_installed_games_file.exists():
            installed_games_file = new_installed_games_file
            logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω installed_games.json –≤ –Ω–æ–≤–æ–º –ø—É—Ç–∏")
        else:
            logger.info("‚ùå –§–∞–π–ª installed_games.json –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ —Å—Ç–∞—Ä–æ–º, –Ω–∏ –≤ –Ω–æ–≤–æ–º –ø—É—Ç–∏")
            return True

        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        logger.info(f"üìñ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {installed_games_file}")
        with open(installed_games_file, 'r', encoding='utf-8') as f:
            installed_games = json.load(f)

        updated = False

        for game_id, game_info in installed_games.items():
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ª–∞—É–Ω—á–µ—Ä—É (—Å–∫—Ä–∏–ø—Ç—É –∑–∞–ø—É—Å–∫–∞)
            if game_info.get('launcher_path'):
                old_launcher_path = game_info['launcher_path']

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç —Å—Ç–∞—Ä–æ–π –ø–∞–ø–∫–∏ users
                if old_users_path in old_launcher_path:
                    relative_launcher_path = Path(old_launcher_path).relative_to(Path(old_users_path))
                    new_launcher_path = str(Path(new_users_path) / relative_launcher_path)
                    game_info['launcher_path'] = new_launcher_path
                    updated = True
                    logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø—É—Ç—å –ª–∞—É–Ω—á–µ—Ä–∞ –¥–ª—è {game_id}:")
                    logger.info(f"   –ë—ã–ª–æ: {old_launcher_path}")
                    logger.info(f"   –°—Ç–∞–ª–æ: {new_launcher_path}")

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–≥—Ä—ã
            if game_info.get('install_path'):
                old_install_path = game_info['install_path']

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç —Å—Ç–∞—Ä–æ–π –ø–∞–ø–∫–∏ users
                if old_users_path in old_install_path:
                    relative_install_path = Path(old_install_path).relative_to(Path(old_users_path))
                    new_install_path = str(Path(new_users_path) / relative_install_path)
                    game_info['install_path'] = new_install_path
                    updated = True
                    logger.info(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø—É—Ç—å –∏–≥—Ä—ã –¥–ª—è {game_id}:")
                    logger.info(f"   –ë—ã–ª–æ: {old_install_path}")
                    logger.info(f"   –°—Ç–∞–ª–æ: {new_install_path}")

        if updated:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ù–û–í–û–ú –ø—É—Ç–∏
            new_installed_games_file.parent.mkdir(parents=True, exist_ok=True)
            with open(new_installed_games_file, 'w', encoding='utf-8') as f:
                json.dump(installed_games, f, ensure_ascii=False, indent=2)

            # –ï—Å–ª–∏ —Ñ–∞–π–ª –±—ã–ª –≤ —Å—Ç–∞—Ä–æ–º –ø—É—Ç–∏, —É–¥–∞–ª—è–µ–º –µ–≥–æ –æ—Ç—Ç—É–¥–∞
            if installed_games_file == old_installed_games_file and old_installed_games_file.exists():
                old_installed_games_file.unlink()
                logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª installed_games.json: {old_installed_games_file}")

            logger.info("‚úÖ –í—Å–µ –ø—É—Ç–∏ –≤ installed_games.json —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

            # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            logger.info("üìã –ò—Ç–æ–≥–æ–≤—ã–µ –ø—É—Ç–∏ –≤ installed_games.json:")
            for game_id, game_info in installed_games.items():
                logger.info(f"   {game_id}:")
                logger.info(f"     install_path: {game_info.get('install_path')}")
                logger.info(f"     launcher_path: {game_info.get('launcher_path')}")

        else:
            logger.info("‚ÑπÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–ø—É—Ç–∏ —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã)")

        # –û–ë–ù–û–í–õ–Ø–ï–ú –°–ö–†–ò–ü–¢–´ –ó–ê–ü–£–°–ö–ê
        scripts_updated = update_launcher_scripts(old_users_path, new_users_path)

        return updated and scripts_updated

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–µ–π: {e}")
        import traceback
        logger.error(f"üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
        return False


# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
os.makedirs(STYLES_DIR, exist_ok=True)
